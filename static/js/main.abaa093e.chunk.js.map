{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","Header.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","onShowDetails","setState","collapsed","onHideDetails","state","event","this","props","className","summary","start","dateTime","timeZone","location","onClick","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","alert","eventNumberOptions","showOptions","NumSuggestion","Header","alt","crossOrigin","variant","src","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getToken","code","encodeCode","encodeURIComponent","access_token","getItem","tokenCheck","removeItem","SearchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.abaa093e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"tailwindcss/tailwind.css\";\n\nclass Event extends Component {\n  constructor() {\n    super();\n    this.state = {\n      collapsed: true,\n    };\n  }\n\n  onShowDetails = () => {\n    this.setState({\n      collapsed: false,\n    });\n  };\n\n  onHideDetails = () => {\n    this.setState({\n      collapsed: true,\n    });\n  };\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n    return (\n      <div className=\"container bg-white shadow-2xl max-w-2xl mx-auto px-4 sm:py-8 sm:px-6  lg:px-8\">\n        {collapsed ? (\n          <div className=\"Events shadow-lg w-full min-h-80 bg-white-200 aspect-w-1 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75\">\n            <div className=\"text-left px-2 py-4\">\n              <h1 className=\"summary text-2xl\">{event.summary}</h1>\n              <p className=\"date-timezone\">\n                {event.start.dateTime}\n                {event.start.timeZone}\n              </p>\n              <p className=\"location\">{event.location}</p>\n            </div>\n\n            <div className=\" px-4 py-4 w-40 text-right\">\n              <button\n                className=\"details shadow-md text-purple-800 \"\n                onClick={collapsed ? this.onShowDetails : this.onHideDetails}\n              >\n                {collapsed ? \"Show details\" : \"Hide details\"}\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"Events shadow-lg w-full min-h-80 bg-white-200 aspect-w-1 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75 lg:h-screen lg:aspect-none\">\n            <div className=\"text-left px-2 py-4\">\n              <h1 className=\"summary text-2xl\">{event.summary}</h1>\n              <p className=\"date-timezone\">\n                {event.start.dateTime}\n                {event.start.timeZone}\n              </p>\n              <p className=\"location\">{event.location}</p>\n              <p className=\"description\">{event.description}</p>\n            </div>\n\n            <div className=\" px-4 py-4 w-40 text-right\">\n              <button\n                className=\"details shadow-md text-purple-800 \"\n                onClick={collapsed ? this.onShowDetails : this.onHideDetails}\n              >\n                {collapsed ? \"Show details\" : \"Hide details\"}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList grid grid-cols-1 gap-y-5 gap-x-3 sm:grid-cols-1 md:grid-cols-2 xl:gap-x-8\">\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({ query: value, suggestions });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <p>Search Event By City</p>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\n            <button>See all cities</button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\n\nclass NumberOfEvents extends Component {\n  constructor() {\n    super();\n    this.state = {\n      numberOfEvents: 32,\n      eventNumberOptions: [8, 16, 32],\n      showOptions: undefined,\n    };\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({\n      numberOfEvents: value,\n    });\n    if (value >= 1 && value <= 32) {\n      this.setState({ numberOfEvents: value });\n    } else {\n      alert(\"Please choose a number between 1 and 32\");\n    }\n  };\n\n  handleItemClicked = (eventNumberOptions) => {\n    this.setState({\n      numberOfEvents: eventNumberOptions,\n      showOptions: false,\n    });\n  };\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className=\"NumberOfEvents\">\n        <p>Number of Events</p>\n        <input\n          type=\"number\"\n          className=\"number-of-events\"\n          value={numberOfEvents}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showOptions: true });\n          }}\n        />\n        <ul\n          className=\"options\"\n          style={this.state.showOptions ? {} : { display: \"none\" }}\n        >\n          {this.state.eventNumberOptions.map((NumSuggestion) => (\n            <li\n              key={NumSuggestion}\n              onClick={() => this.handleItemClicked(NumSuggestion)}\n            >\n              {NumSuggestion}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <img\n          alt=\"\"\n          crossOrigin=\"*\"\n          variant=\"top\"\n          src=\"https://i.imgur.com/5wU3P5G.png\"\n          className=\"w-full h-full object-center object-cover lg:w-full lg:h-full\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-19T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-20T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n];\n\nexport { mockData };\n","import axios from \"axios\";\nimport { mockData } from \"./mock-data\";\nimport NProgress from \"nprogress\";\n\n/**@param {*} events:\n * The following function should be in the \"api.js\" file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n * */\n\nexport const extractLocations = (events) => {\n  let extractLocations = events.map((event) => event.location);\n  let locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    let newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    let newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://b8wc3rdmth.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://b8wc3rdmth.execute-api.eu-central-1.amazonaws.com/dev/api/token\" +\n      \"/\" +\n      encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access-token\");\n\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access-token\");\n    const SearchParams = new URLSearchParams(window.location.search);\n    const code = await SearchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://b8wc3rdmth.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url \"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./nprogress.css\";\n\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport Header from \"./Header\";\nimport { extractLocations, getEvents } from \"./api\";\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      locations: [],\n      events: [],\n      numberOfEvents: 32,\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events,\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents,\n      });\n    });\n  };\n\n  render() {\n    const { locations, events, numberOfEvents } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <CitySearch locations={locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={numberOfEvents} />\n        <EventList events={events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}